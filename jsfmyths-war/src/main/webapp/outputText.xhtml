<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:h="http://java.sun.com/jsf/html"
        >

<body>
<ui:composition template="/templates/template.xhtml">

    <ui:define name="title">JSF Myths - outputText</ui:define>

    <ui:define name="body">
        <h1>JSF Myths - outputText</h1>

        <h2>The Myth</h2>

        <p class="lead">
            Every output in JSF has to be done using <code>&lt;h:outputText&gt;</code>.
        </p>

        <h2>Consequence</h2>

        The code is cluttered with a myriad of outputText tags and hardly readable.

        <h2>The Truth</h2>

        The tag outputText is always needed only for rendering using JSP. If you use facelets, which
        directly supports HTML, you can omit it. You can use the tag in facelets but most of the time it
        provides no additional feature, only noise.

        <h2>Proof by example</h2>
        <table class="table">
            <tr>
                <th>Description</th>
                <th>Directly<br/><code>\#{bean.text}</code></th>
                <th>With Tag<br/><code>&lt;h:outputText value="\#{bean.text}"/&gt;</code></th>
            </tr>
            <tr>
                <td>Simple text <br/>
                    <code>Hello World</code>
                </td>
                <td>#{outputTextBean.text1}</td>
                <td><h:outputText value="#{outputTextBean.text1}"/></td>
            </tr>
            <tr>
                <td>Text with HTML code <br/>
                    <code>Hello &lt;b>fat World&lt;/b></code>
                </td>
                <td>#{outputTextBean.text2}</td>
                <td><h:outputText value="#{outputTextBean.text2}"/></td>
            </tr>
        </table>
        <h2>The exceptions</h2>
        <p>
            Here are some use cases where it actually makes sense to use the tag:
        </p>
        <dl>
            <dt>Conditional Rendering</dt>
            <dd>The attribute <code>rendered</code> enables to show a text based on server-side condition:<br/>
                <code>&lt;h:outputText value="\#{details.description}" rendered="\#{error}" /&gt;</code>
            </dd>
            <dt>Formatting</dt>
            <dd>
                <ul>
                <li> Using tags such as <code>&lt;f:convertDataTime&gt;, &lt;f:converter&gt;</code> it is possible to
                adapt the textual format of a bean attribute.
                </li>
                </ul>
            </dd>
            <dt>AJAX rerendering</dt>
            <dd>If you want to dynamically rerender a text using JSF-AJAX, you need a surrounding tag with an
                id.
            </dd>
        </dl>
    </ui:define>
</ui:composition>
</body>
</html>