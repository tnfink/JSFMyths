<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      >

<body>
<ui:composition template="/templates/template.xhtml">

    <ui:define name="title">JSF Myths - outputText</ui:define>

    <ui:define name="body">
        <fieldset class="mainfieldset">
            <legend>JSF Myths - outputText</legend>

            <p>
                <strong>The Myth</strong><br/>
                Every output in JSF has to be done using &lt;h:outputText&gt;
            </p>
            <p>
                <strong>Consequence</strong><br/>
                The code is cluttered with a myriad of outputText tags and hardly readable,
            </p>
            <p>
                <strong>The Truth</strong><br/>
                The tag outputText is needed for rendering using JSP. It is not needed for Facelets which directly
                supports XHTML. You can use the tag in Facelets but it provides no additional feature, only noise.

                Use Cases where it makes:
                - Formatting, Converter (f:convertDataTime, f:converter)
                - Ajax rerendering
                - Rendered-Attribute (to )
            </p>

            <strong>Proof by example</strong>
            <table class="prooftable" >
                <tr><th>Description</th><th>Directly</th><th>Using &lt;h:outputText&gt;</th></tr>
                <tr><td>Simple text <br/>
                    <tt>Hello World</tt>
                </td>
                    <td>#{outputTextBean.text1}</td>
                    <td><h:outputText value="#{outputTextBean.text1}"/> </td></tr>
                <tr><td>Text with HTML code <br/>
                    <tt>Hello &lt;b>World&lt;/b></tt>
                </td>
                    <td>#{outputTextBean.text2}</td>
                    <td><h:outputText value="#{outputTextBean.text2}"/> </td></tr>
            </table>

        </fieldset>
    </ui:define>

</ui:composition>
</body>
</html>